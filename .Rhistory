install.packages("devtools")
install.packages("roxygen2")
library(devtools)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
system("python R/test.py")
library(reticulate)
ggplot(anscombe, aes(x=x1, y=y1)) + geom_point()
library(ggplot2)
ggplot(anscombe, aes(x=x1, y=y1)) + geom_point()
plot = ggplot(mtcars, aes(x=wt, y=mpg)) + geom_point()
r_to_py(plot)
py_plot = r_to_py(plot)
py_plot = r_to_py(plot, convert = TRUE)
py_install(ggplot)
library(ggplot)
source activate r-reticulate
datasets::anscombe
anscombe
libra
g = ggplot(anscombe, aes(x=x1, y=y1)) + geom_point()
g
r_to_py
r_to_py(g)
data = r_to
data = r_to_py(anscombe)
data
g
str(g)
install.packages(plotly)
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
library(ggplot2)
ggplot(anscombe, aes(x=x1, y=y1)) + geom_point()
g = ggplot(anscombe, aes(x=x1, y=y1)) + geom_point()
g
ggplot_build(g)
g$data
g <- ggplot(anscombe, aes(x=x1, y=y1)) + geom_point()
g
g$data
ggplot_build(g)$data
plot = ggplot_build(g)$data
plot$x
plot[0]
plot[1]
plot[1]$x
plot[2]
plot[0][1]
plot[0][0]
library(reticulate)
r_to_py(plot)
py_obj = r_to_py(plot)
type(py_obj)
type([])
repl_python()
py_obj
repl_python()
py_obj['group']
py_obj[0]
py_obj[1]
py_obj[0]
py_obj[0]['group']
py_obj[0]['group'][0]
pd <- import("pandas")
r_to_py(ggplot_build(g))
plot
plot$panel
plot$panel$ranges[[1]]$x.labels
plot
plot$layout
source('~/GSoCDemo/R/main.R')
generate(g)
source('~/GSoCDemo/R/main.R')
generate(g)
source('~/GSoCDemo/R/main.R')
generate(g)
source('~/GSoCDemo/R/main.R')
generate(g)
conda install pandas
source('~/GSoCDemo/R/main.R')
generate(g)
plot
g
build = ggplot_build(g)
build
build$data
build$plot
build$layout
sapply(build$layers, function(x) class(x$geom)[1])
sapply(build$layers, function(x) class(x$geom)[1])[0]
sapply(build$layers, function(x) class(x$geom)[1])[0][0]
build$layers[[1]]$geom$objname
build$layers
build$layout
build$layout[[1]]$geom$objname
build$layout[[1]]
build$layout[1]
build$layout[[0]]$geom$objname
build$layout[[0]]$geom$name
build
build$plot
build$coord_params
build$layout
build$layout$panel_params
build$layout$coord_params
build$layout$xlabel
build$layout$layout
build$layout$layout$SCALE_X
build$layout$layout$SCALE_Y
build$layout$layout$PANEL
build$layout$layout$ROW
build$layout$layout$COL
build$layout$facet_params
build$layout$facet
build$layout$panel_params
build$layout$panel_scales_y
build$layout$get_scales
build$layout$reset_scales
build$layout$coord
build$layout$coord$limits
build$layout$coord$clip
build$layout$coord$default
build$layout$coord$expand
build$layout$coord$backtransform_range
build$layout$coord$distance
build$layout$coord$range
build$layout$coord$aspect
build$layout$coord$labels
build$layout$coord_params
build$layout$coord_params[0]
build$layout$coord_params[0][0][0][0]
build$layout$facet
build$layout$facet$vars
build$layout$facet$params
build$layout$facet$params[0]
build$layout$facet$params[[0]]
build$layout$facet$params[[1]]
build$layout$layout
build$layout$panel_params
build$layout$render
dat <- data.frame(x=1:3, y=1:3, ymin=0:2, ymax=2:4)
p <- ggplot(dat, aes(x=x, y=y)) + geom_ribbon(aes(ymin=ymin, ymax=ymax), alpha=0.3) + geom_line()
p$layers
g
plot
G$layers
g$layers
g$layers[[1]]$geom$objname
g$layers[[0]]$geom$objname
sapply(g$layers, function(x) class(x$geom)[1])
type <- sapply(g$layers, function(x) class(x$geom)[1])
type
r_to_py(type)
s = "Hello World"
s
r_to_py(s)
source('~/GSoCDemo/R/main.R')
source('~/GSoCDemo/R/main.R')
generate(g)
library(ggplot2)
g <- ggplot(map, aes(class)) + geim_bar()
g <- ggplot(mpg, aes(class)) + geim_bar()
g <- ggplot(mpg, aes(class)) + geom_bar()
g
install.packages(devtools)
install.packages("devtools")
install.packages("devtools")
devtools::install_github("vegawidget/altair")
devtools::install_github("vegawidget/altair")
devtools::install_github("vegawidget/altair")
library(ggplot2)
system('defaults write org.R-project.R force.LANG en_US.UTF-8')
devtools::install_github("vegawidget/altair")
system('defaults write org.R-project.R force.LANG en_US.UTF-8')
devtools::install_github("vegawidget/altair")
devtools::install_github("vegawidget/altair")
devtools::install_github("vegawidget/altair")
library(ggplot2)
ggplot(anscombe, aes(x=x1, y=y1)) + geom_point()
py_run_string("hello")
library(reticulate)
py_run_string("hello")
py_run_string("print('Hello World)")
py_run_string("print('Hello World')")
py_run_string("print('Hello World')")
repl_python()
